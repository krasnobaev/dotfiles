{
    // "uglifyjs_command": "/usr/local/bin/uglifyjs",
    // "keep_comments": false,
    // "comments_to_keep": false,
    // "uglifyjs_pretty_options": "indent-level=2, width=80, bracketize=true, semicolons=true, quote_style=1",
    "uglifyjs_pretty_options": "quote_style=1,indent-level=2,width=80",
    // "source_map": false,

    // indent-start=(default 0), // prefix all lines by that many spaces
    // quote-keys=(default false), // pass true to quote all keys in literal objects
    // space-colon=(default true), // insert a space after the colon signs
    // ascii-only=(default false), // escape Unicode characters in strings and regexps
    // inline-script=(default false), // escape the slash in occurrences of </script in strings
    // width=(default 80), // only takes effect when beautification is on, this specifies an (orientative) line width that the beautifier will try to obey. It refers to the width of the line text (excluding indentation). It doesn't work very well currently, but it does make the code generated by UglifyJS more readable.
    // max-line-len=(default 32000), // maximum line length (for uglified code)
    // bracketize=(default false), // always insert brackets in if, for, do, while or with statements, even if their body is a single statement.
    // semicolons=(default true), // separate statements with semicolons. If you pass false then whenever possible we will use a newline instead of a semicolon, leading to more readable output of uglified code (size before gzip could be smaller; size after gzip insignificantly larger).
    // preamble=(default null), // when passed it must be a string and it will be prepended to the output literally. The source map will adjust for this text. Can be used to insert a comment containing licensing information, for example.
    // quote_style=(default 0), // preferred quote style for strings (affects quoted property names and directives as well)
}
